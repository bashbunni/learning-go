package main

import (
	"math"
	"testing"
)

func TestPerimeter(t *testing.T) {

	t.Run("rectangle", func(t *testing.T) {
		rectangle := Rectangle{10.0, 10.0}
		got := Perimeter(rectangle)
		want := 40.0

		if got != want {
			t.Errorf("got %.2f want %.2f", got, want)
		}
	})
}

func TestArea(t *testing.T) {
	checkArea := func(t testing.TB, shape Shape, want float64) {
		t.Helper()
		got := shape.Area()
		if got != want {
			t.Errorf("got %g want %g", got, want)
		}
	}

	areaTests := []struct {
		shape Shape
		want  float64
	}{
		{Rectangle{12, 6}, 72.0},
		{Circle{10}, 314.1592653589793},
	}

	t.Run("rect area", func(t *testing.T) {
		rectangle := Rectangle{4.0, 3.0}
		checkArea(t, rectangle, 12.0)
	})

	t.Run("circle", func(t *testing.T) {
		circle := Circle{5.0}
		want := math.Pi * circle.radius * circle.radius
		checkArea(t, circle, want)
	})

}
